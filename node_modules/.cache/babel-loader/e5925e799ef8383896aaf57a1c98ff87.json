{"ast":null,"code":"var _jsxFileName = \"/home/master/Desktop/TaskApp/src/components/Column.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Button, Modal, DropdownButton, ButtonGroup, Dropdown } from 'react-bootstrap';\nimport Task from './Task';\nimport host from '../config';\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_id\"] }] */\n\nclass Column extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      name\n    } = this.props;\n    this.state = {\n      show: false,\n      tasks: [],\n      columnName: name\n    };\n    this.tasks = [];\n    this.showModal = this.showModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.removeTask = this.removeTask.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      id,\n      board\n    } = this.props;\n    const config = {\n      method: 'POST',\n      url: `${host}/get/task/`,\n      data: {\n        columnId: id,\n        boardId: board\n      }\n    };\n    axios(config).then(res => {\n      this.setState({\n        tasks: res.data\n      });\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const {\n      columnName,\n      taskDescription\n    } = this.state;\n    const {\n      board,\n      session,\n      id\n    } = this.props;\n    const createConfig = {\n      method: 'POST',\n      url: `${host}/create/task/`,\n      data: {\n        description: taskDescription,\n        colName: columnName,\n        boardId: board,\n        session\n      }\n    };\n    axios(createConfig).then(() => {\n      const config = {\n        method: 'POST',\n        url: `${host}/get/task/`,\n        data: {\n          columnId: id,\n          boardId: board\n        }\n      };\n      axios(config).then(res => {\n        const newState = {\n          tasks: res.data,\n          show: false\n        };\n        this.setState(newState);\n        window.location.reload();\n      });\n    });\n  }\n\n  showModal() {\n    this.setState({\n      show: true\n    });\n  }\n\n  hideModal() {\n    this.setState({\n      show: false\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  searchTasks() {\n    const {\n      tasks\n    } = this.state;\n    const {\n      board,\n      id,\n      availableColumns,\n      updateTask\n    } = this.props;\n\n    if (!tasks || tasks.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"task-not-found\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, \"There are no Tasks\");\n    }\n\n    const arr = tasks.map(task => /*#__PURE__*/React.createElement(Task, {\n      key: task._id,\n      removeTask: this.removeTask,\n      board: board,\n      columnId: id,\n      availableColumns: availableColumns,\n      updateTask: updateTask,\n      tasks: task,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }));\n    return arr;\n  }\n\n  async removeTask(id, columnId, board) {\n    const config = {\n      method: 'POST',\n      url: `${host}/delete/task/`,\n      data: {\n        columnId,\n        boardId: board,\n        id\n      }\n    };\n    axios(config).then(res => {\n      this.setState({\n        tasks: res.data\n      });\n    });\n  }\n\n  render() {\n    const {\n      name,\n      id,\n      session,\n      board,\n      delColumn,\n      availableColumns\n    } = this.props;\n    const {\n      show,\n      columnName\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, name), /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      onClick: () => delColumn(id, session, board),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, \"\\uD83D\\uDDD1\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tasks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, this.searchTasks()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      className: \"new-task-btn\",\n      onClick: this.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, \"+\"), /*#__PURE__*/React.createElement(Modal, {\n      centered: true,\n      show: show,\n      onHide: this.hideModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, \"Create Task\")), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"task-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, \"Task:\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"task-name\",\n      type: \"text\",\n      name: \"taskDescription\",\n      value: this.taskDescription,\n      onChange: this.handleChange,\n      className: \"textBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"column-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, \"Column:\"), /*#__PURE__*/React.createElement(DropdownButton, {\n      id: \"column-name\",\n      as: ButtonGroup,\n      variant: \"secondary\",\n      title: columnName,\n      className: \"column-dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, availableColumns.map(elem => /*#__PURE__*/React.createElement(Dropdown.Item, {\n      key: elem._id,\n      onClick: () => this.setState({\n        columnName: elem.name\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 27\n      }\n    }, elem.name))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"btn btn-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 19\n      }\n    })))))));\n  }\n\n}\n\nexport default Column;","map":{"version":3,"sources":["/home/master/Desktop/TaskApp/src/components/Column.js"],"names":["React","axios","Button","Modal","DropdownButton","ButtonGroup","Dropdown","Task","host","Column","Component","constructor","props","name","state","show","tasks","columnName","showModal","bind","hideModal","handleChange","handleSubmit","removeTask","componentDidMount","id","board","config","method","url","data","columnId","boardId","then","res","setState","e","preventDefault","taskDescription","session","createConfig","description","colName","newState","window","location","reload","target","value","searchTasks","availableColumns","updateTask","length","arr","map","task","_id","render","delColumn","elem"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {\n  Button,\n  Modal,\n  DropdownButton,\n  ButtonGroup,\n  Dropdown,\n} from 'react-bootstrap';\nimport Task from './Task';\nimport host from '../config';\n\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_id\"] }] */\n\nclass Column extends React.Component {\n  constructor(props) {\n    super(props);\n    const { name } = this.props;\n    this.state = {\n      show: false,\n      tasks: [],\n      columnName: name,\n    };\n    this.tasks = [];\n    this.showModal = this.showModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.removeTask = this.removeTask.bind(this);\n  }\n\n  componentDidMount() {\n    const { id, board } = this.props;\n    const config = {\n      method: 'POST',\n      url: `${host}/get/task/`,\n      data: {\n        columnId: id,\n        boardId: board,\n      },\n    };\n    axios(config).then((res) => {\n      this.setState({ tasks: res.data });\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { columnName, taskDescription } = this.state;\n    const { board, session, id } = this.props;\n    const createConfig = {\n      method: 'POST',\n      url: `${host}/create/task/`,\n      data: {\n        description: taskDescription,\n        colName: columnName,\n        boardId: board,\n        session,\n      },\n    };\n    axios(createConfig).then(() => {\n      const config = {\n        method: 'POST',\n        url: `${host}/get/task/`,\n        data: {\n          columnId: id,\n          boardId: board,\n        },\n      };\n      axios(config).then((res) => {\n        const newState = {\n          tasks: res.data,\n          show: false,\n        };\n        this.setState(newState);\n        window.location.reload();\n      });\n    });\n  }\n\n  showModal() {\n    this.setState({ show: true });\n  }\n\n  hideModal() {\n    this.setState({ show: false });\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  searchTasks() {\n    const { tasks } = this.state;\n    const {\n      board,\n      id,\n      availableColumns,\n      updateTask,\n    } = this.props;\n    if (!tasks || tasks.length === 0) {\n      return (\n        <div className=\"task-not-found\">\n          There are no Tasks\n        </div>\n      );\n    }\n    const arr = tasks.map((task) => (\n      <Task\n        key={task._id}\n        removeTask={this.removeTask}\n        board={board}\n        columnId={id}\n        availableColumns={availableColumns}\n        updateTask={updateTask}\n        tasks={task}\n      />\n    ));\n    return arr;\n  }\n\n  async removeTask(id, columnId, board) {\n    const config = {\n      method: 'POST',\n      url: `${host}/delete/task/`,\n      data: {\n        columnId,\n        boardId: board,\n        id,\n      },\n    };\n    axios(config).then((res) => {\n      this.setState({ tasks: res.data });\n    });\n  }\n\n  render() {\n    const {\n      name,\n      id,\n      session,\n      board,\n      delColumn,\n      availableColumns,\n    } = this.props;\n    const { show, columnName } = this.state;\n    return (\n      <div className=\"column-container\">\n        <div className=\"column\">\n          <div className=\"title\">\n            <p>{name}</p>\n            <Button variant=\"danger\" onClick={() => delColumn(id, session, board)}>🗑</Button>\n          </div>\n          <div className=\"tasks\">\n            {\n              this.searchTasks()\n            }\n          </div>\n          <div className=\"footer\">\n            <Button variant=\"primary\" className=\"new-task-btn\" onClick={this.showModal}>+</Button>\n            <Modal centered show={show} onHide={this.hideModal}>\n              <Modal.Header closeButton>\n                <Modal.Title>Create Task</Modal.Title>\n              </Modal.Header>\n              <form onSubmit={this.handleSubmit}>\n                <Modal.Body>\n                  <label htmlFor=\"task-name\">\n                    <div className=\"input-label\">Task:</div>\n                    <input\n                      id=\"task-name\"\n                      type=\"text\"\n                      name=\"taskDescription\"\n                      value={this.taskDescription}\n                      onChange={this.handleChange}\n                      className=\"textBox\"\n                    />\n                  </label>\n                  <label htmlFor=\"column-name\">\n                    <div className=\"input-label\">Column:</div>\n                    <DropdownButton\n                      id=\"column-name\"\n                      as={ButtonGroup}\n                      variant=\"secondary\"\n                      title={columnName}\n                      className=\"column-dropdown\"\n                    >\n                      {\n                        availableColumns.map((elem) => (\n                          <Dropdown.Item\n                            key={elem._id}\n                            onClick={() => this.setState({ columnName: elem.name })}\n                          >\n                            {elem.name}\n                          </Dropdown.Item>\n                        ))\n                      }\n                    </DropdownButton>\n                  </label>\n                </Modal.Body>\n                <Modal.Footer>\n                  <input\n                    type=\"submit\"\n                    value=\"Submit\"\n                    className=\"btn btn-light\"\n                  />\n                </Modal.Footer>\n              </form>\n            </Modal>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Column;\n"]},"metadata":{},"sourceType":"module"}