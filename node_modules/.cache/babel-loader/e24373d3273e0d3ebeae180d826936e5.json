{"ast":null,"code":"var _jsxFileName = \"/home/master/Desktop/TaskApp/src/views/TaskAdmin.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Nav, NavDropdown, Button, Modal } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/dashboard.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport host from \"../config\";\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_id\"] }] */\n\n/* eslint react/forbid-prop-types: 0 */\n\nconst close = session => alert(`Closing Session ${session}`);\n\nclass TaskAdmin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskList: []\n    };\n    const {\n      match\n    } = this.props;\n    this.session = match.params.Session;\n    this.showModal = this.showModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.openBoard = this.openBoard.bind(this);\n    this.createTask = this.createTask.bind(this);\n  }\n\n  componentDidMount() {\n    const config = {\n      method: \"GET\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      url: `${host}/tasks`,\n      data: {\n        \"user_id\": parseInt(this.session)\n      }\n    };\n    axios(config).then((res, err) => {\n      if (err) {\n        console.log(err);\n      }\n\n      this.setState({\n        taskList: res.data\n      });\n      console.log(res.data);\n    });\n  }\n\n  openBoard(e) {\n    const {\n      taskList\n    } = this.state;\n    const {\n      history\n    } = this.props;\n    const task = taskList.find(item => item.id === parseInt(e.target.value, 10));\n    history.push({\n      pathname: `/Boards/${this.session}/${e.target.value}`,\n      state: {\n        task\n      }\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.createBoard().then(() => {\n      this.componentDidMount();\n    });\n  }\n\n  showModal() {\n    this.setState({\n      show: true\n    });\n  }\n\n  hideModal() {\n    this.setState({\n      show: false\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  async removeBoard(id) {\n    const config = {\n      method: \"DELETE\",\n      url: `${host}/${id}`,\n      data: {\n        user_id: this.session\n      }\n    };\n    const deleteState = await axios(config);\n    this.componentDidMount();\n    return deleteState.data;\n  }\n\n  async createTask() {// const { boardName } = this.state;\n    // const config = {\n    //   method: 'POST',\n    //   url: `${host}/tasks`,\n    //   data: {\n    //     name: boardName,\n    //     session: this.session,\n    //   },\n    // };\n    // const creationState = await axios(config);\n    // return creationState.data;\n  }\n\n  searchTasks() {\n    const {\n      taskList\n    } = this.state;\n\n    if (!taskList || taskList.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"board-not-found\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 20\n        }\n      }, \"There are no Tasks\");\n    }\n\n    const arr = taskList.map(element => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board\",\n      key: element._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, element.name), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      value: element._id,\n      onClick: this.openBoard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, \"Open\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      onClick: () => this.removeBoard(element._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, \"\\uD83D\\uDDD1\"))));\n    return arr;\n  }\n\n  render() {\n    const {\n      show\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      className: \"justify-content-end top-bar\",\n      onSelect: () => close(this.session),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavDropdown, {\n      title: \"Options\",\n      id: \"nav-dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NavDropdown.Item, {\n      eventKey: \"LogOut\",\n      href: \"/Login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, \"Log Out\"))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      className: \"add-button\",\n      onClick: this.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, \"+\"), /*#__PURE__*/React.createElement(Modal, {\n      centered: true,\n      show: show,\n      onHide: this.hideModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, \"Create Task\")), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"board-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }\n    }, \"Task Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"board-name\",\n      name: \"boardName\",\n      value: this.newTaskName,\n      onChange: this.handleChange,\n      className: \"textBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"btn btn-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-deck\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, this.searchTasks()));\n  }\n\n}\n\nTaskAdmin.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\nexport default TaskAdmin;","map":{"version":3,"sources":["/home/master/Desktop/TaskApp/src/views/TaskAdmin.js"],"names":["React","axios","Nav","NavDropdown","Button","Modal","PropTypes","host","close","session","alert","TaskAdmin","Component","constructor","props","state","taskList","match","params","Session","showModal","bind","hideModal","handleChange","handleSubmit","openBoard","createTask","componentDidMount","config","method","headers","url","data","parseInt","then","res","err","console","log","setState","e","history","task","find","item","id","target","value","push","pathname","preventDefault","createBoard","show","name","removeBoard","user_id","deleteState","searchTasks","length","arr","map","element","_id","render","newTaskName","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { Nav, NavDropdown, Button, Modal } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/dashboard.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport host from \"../config\";\n\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_id\"] }] */\n/* eslint react/forbid-prop-types: 0 */\n\nconst close = (session) => alert(`Closing Session ${session}`);\n\nclass TaskAdmin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            taskList: [],\n        };\n        const { match } = this.props;\n        this.session = match.params.Session;\n        this.showModal = this.showModal.bind(this);\n        this.hideModal = this.hideModal.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.openBoard = this.openBoard.bind(this);\n        this.createTask = this.createTask.bind(this);\n    }\n\n    componentDidMount() {\n        const config = {\n            method: \"GET\",\n            headers: {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n            },\n            url: `${host}/tasks`,\n            data: {\n                \"user_id\": parseInt(this.session),\n            },\n        };\n        axios(config).then((res, err) => {\n            if(err){\n                console.log(err);\n            }\n            this.setState({ taskList: res.data });\n            console.log(res.data);\n        });\n    }\n\n    openBoard(e) {\n        const { taskList } = this.state;\n        const { history } = this.props;\n        const task = taskList.find(\n            (item) => item.id === parseInt(e.target.value, 10)\n        );\n        history.push({\n            pathname: `/Boards/${this.session}/${e.target.value}`,\n            state: {\n                task,\n            },\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.createBoard().then(() => {\n            this.componentDidMount();\n        });\n    }\n\n    showModal() {\n        this.setState({ show: true });\n    }\n\n    hideModal() {\n        this.setState({ show: false });\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    async removeBoard(id) {\n        const config = {\n            method: \"DELETE\",\n            url: `${host}/${id}`,\n            data: {\n                user_id: this.session,\n            },\n        };\n        const deleteState = await axios(config);\n        this.componentDidMount();\n        return deleteState.data;\n    }\n\n    async createTask() {\n        // const { boardName } = this.state;\n        // const config = {\n        //   method: 'POST',\n        //   url: `${host}/tasks`,\n        //   data: {\n        //     name: boardName,\n        //     session: this.session,\n        //   },\n        // };\n        // const creationState = await axios(config);\n        // return creationState.data;\n    }\n\n    searchTasks() {\n        const { taskList } = this.state;\n        if (!taskList || taskList.length === 0) {\n            return <div className=\"board-not-found\">There are no Tasks</div>;\n        }\n        const arr = taskList.map((element) => (\n            <div className=\"board\" key={element._id}>\n                <div>\n                    <p>{element.name}</p>\n                    <Button\n                        variant=\"dark\"\n                        value={element._id}\n                        onClick={this.openBoard}\n                    >\n                        Open\n                    </Button>\n                    <Button\n                        variant=\"danger\"\n                        onClick={() => this.removeBoard(element._id)}\n                    >\n                        🗑\n                    </Button>\n                </div>\n            </div>\n        ));\n        return arr;\n    }\n\n    render() {\n        const { show } = this.state;\n        return (\n            <div className=\"dashboard\">\n                <Nav\n                    className=\"justify-content-end top-bar\"\n                    onSelect={() => close(this.session)}\n                >\n                    <NavDropdown title=\"Options\" id=\"nav-dropdown\">\n                        <NavDropdown.Item eventKey=\"LogOut\" href=\"/Login\">\n                            Log Out\n                        </NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n                <Button\n                    variant=\"dark\"\n                    className=\"add-button\"\n                    onClick={this.showModal}\n                >\n                    +\n                </Button>\n                <Modal centered show={show} onHide={this.hideModal}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Create Task</Modal.Title>\n                    </Modal.Header>\n                    <form onSubmit={this.handleSubmit}>\n                        <Modal.Body>\n                            <label htmlFor=\"board-name\">\n                                <div className=\"input-label\">Task Name:</div>\n                                <input\n                                    type=\"text\"\n                                    id=\"board-name\"\n                                    name=\"boardName\"\n                                    value={this.newTaskName}\n                                    onChange={this.handleChange}\n                                    className=\"textBox\"\n                                />\n                            </label>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <input\n                                type=\"submit\"\n                                value=\"Submit\"\n                                className=\"btn btn-light\"\n                            />\n                        </Modal.Footer>\n                    </form>\n                </Modal>\n                <div className=\"board-deck\">{this.searchTasks()}</div>\n            </div>\n        );\n    }\n}\n\nTaskAdmin.propTypes = {\n    history: PropTypes.object.isRequired,\n    match: PropTypes.object.isRequired,\n};\n\nexport default TaskAdmin;\n"]},"metadata":{},"sourceType":"module"}