{"ast":null,"code":"var _jsxFileName = \"/home/master/Desktop/TaskApp/src/views/Board.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Nav, NavDropdown, Button, Modal } from 'react-bootstrap';\nimport { Column } from '../components';\nimport '../styles/board.scss';\nimport host from '../config';\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_id\"] }] */\n\nconst close = session => alert(`Closing Session ${session}`);\n\nasync function createColumn(name, boardId, session) {\n  const config = {\n    method: 'POST',\n    url: `${host}/create/column/`,\n    data: {\n      name,\n      boardId,\n      session\n    }\n  };\n  const creationState = await axios(config);\n  return creationState.data;\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      history,\n      match\n    } = this.props;\n\n    if (history.location.state) {\n      this.state = {\n        show: false,\n        columnList: []\n      };\n      this.columnList = [];\n      this.taskList = [];\n      this.BoardId = match.params.BoardId;\n      this.Session = match.params.session;\n      this.showModal = this.showModal.bind(this);\n      this.hideModal = this.hideModal.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.removeColumn = this.removeColumn.bind(this);\n      this.updateTask = this.updateTask.bind(this);\n      this.returnToAdmin = this.returnToAdmin.bind(this);\n    }\n  }\n\n  componentDidMount() {\n    const config = {\n      method: 'POST',\n      url: `${host}/get/column/`,\n      data: {\n        session: this.Session,\n        boardId: this.BoardId\n      }\n    };\n    axios(config).then(res => {\n      this.setState({\n        columnList: res.data\n      });\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const {\n      columnName\n    } = this.state;\n    createColumn(columnName, this.BoardId, this.Session).then(() => {\n      const config = {\n        method: 'POST',\n        url: `${host}/get/column/`,\n        data: {\n          session: this.Session,\n          boardId: this.BoardId\n        }\n      };\n      axios(config).then(res => {\n        const newState = {\n          columnList: res.data,\n          show: false\n        };\n        this.setState(newState);\n      });\n    });\n  }\n\n  async updateTask() {\n    const config = {\n      method: 'POST',\n      url: `${host}/get/column/`,\n      data: {\n        session: this.Session,\n        boardId: this.BoardId\n      }\n    };\n    axios(config).then(res => {\n      this.setState({\n        columnList: res.data\n      });\n    });\n    window.location.reload();\n  }\n\n  showModal() {\n    this.setState({\n      show: true\n    });\n  }\n\n  hideModal() {\n    this.setState({\n      show: false\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  returnToAdmin() {\n    const {\n      history,\n      match\n    } = this.props;\n    history.push(`/Dashboard/${match.params.session}`);\n  }\n\n  async removeColumn(id, session, boardId) {\n    const config = {\n      method: 'POST',\n      url: `${host}/delete/column/`,\n      data: {\n        session,\n        boardId,\n        id\n      }\n    };\n    const deleteState = await axios(config);\n    this.setState({\n      columnList: deleteState.data\n    });\n    return deleteState.data;\n  }\n\n  searchColumns(columnsFound, tasks) {\n    if (!columnsFound || columnsFound.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-not-found\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }, \"There are no Columns\");\n    }\n\n    const arr = columnsFound.map(column => {\n      const {\n        columnList\n      } = this.state;\n      return /*#__PURE__*/React.createElement(Column, {\n        key: column._id,\n        name: column.name,\n        id: column._id,\n        session: this.Session,\n        board: this.BoardId,\n        delColumn: this.removeColumn,\n        availableColumns: columnList,\n        updateTask: this.updateTask,\n        tasks: tasks.filter(task => task.columnId === column.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }\n      });\n    });\n    return arr;\n  }\n\n  render() {\n    const {\n      history\n    } = this.props;\n    const {\n      show,\n      columnList\n    } = this.state;\n\n    if (history.location.state) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"board\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        className: \"justify-content-end top-bar\",\n        onSelect: () => close(this.Session),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Item, {\n        className: \"return-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.returnToAdmin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }\n      }, '<')), /*#__PURE__*/React.createElement(NavDropdown, {\n        title: \"Options\",\n        id: \"nav-dropdown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(NavDropdown.Item, {\n        eventKey: \"LogOut\",\n        href: \"/Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }\n      }, \"Log Out\"))), /*#__PURE__*/React.createElement(Button, {\n        variant: \"dark\",\n        className: \"add-button\",\n        onClick: this.showModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }\n      }, \"+\"), /*#__PURE__*/React.createElement(Modal, {\n        centered: true,\n        show: show,\n        onHide: this.hideModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }\n      }, \"Create Column\")), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"column-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 19\n        }\n      }, \"Column Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"column-name\",\n        name: \"columnName\",\n        value: this.newColumnName,\n        onChange: this.handleChange,\n        className: \"textBox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        className: \"btn btn-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column-deck\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }\n      }, this.searchColumns(columnList, this.taskList)));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-screen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 7\n      }\n    }, \"There`'`s been a mistake, please check your Session\");\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/master/Desktop/TaskApp/src/views/Board.js"],"names":["React","axios","Nav","NavDropdown","Button","Modal","Column","host","close","session","alert","createColumn","name","boardId","config","method","url","data","creationState","Board","Component","constructor","props","history","match","location","state","show","columnList","taskList","BoardId","params","Session","showModal","bind","hideModal","handleChange","handleSubmit","removeColumn","updateTask","returnToAdmin","componentDidMount","then","res","setState","e","preventDefault","columnName","newState","window","reload","target","value","push","id","deleteState","searchColumns","columnsFound","tasks","length","arr","map","column","_id","filter","task","columnId","render","newColumnName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {\n  Nav,\n  NavDropdown,\n  Button,\n  Modal,\n} from 'react-bootstrap';\nimport { Column } from '../components';\nimport '../styles/board.scss';\nimport host from '../config';\n\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_id\"] }] */\n\nconst close = (session) => alert(`Closing Session ${session}`);\n\n\nasync function createColumn(name, boardId, session) {\n  const config = {\n    method: 'POST',\n    url: `${host}/create/column/`,\n    data: {\n      name,\n      boardId,\n      session,\n    },\n  };\n  const creationState = await axios(config);\n  return creationState.data;\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    const { history, match } = this.props;\n\n    if (history.location.state) {\n      this.state = {\n        show: false,\n        columnList: [],\n      };\n      this.columnList = [];\n      this.taskList = [];\n      this.BoardId = match.params.BoardId;\n      this.Session = match.params.session;\n      this.showModal = this.showModal.bind(this);\n      this.hideModal = this.hideModal.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.removeColumn = this.removeColumn.bind(this);\n      this.updateTask = this.updateTask.bind(this);\n      this.returnToAdmin = this.returnToAdmin.bind(this);\n    }\n  }\n\n  componentDidMount() {\n    const config = {\n      method: 'POST',\n      url: `${host}/get/column/`,\n      data: {\n        session: this.Session,\n        boardId: this.BoardId,\n      },\n    };\n    axios(config).then((res) => {\n      this.setState({ columnList: res.data });\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { columnName } = this.state;\n    createColumn(columnName, this.BoardId, this.Session).then(() => {\n      const config = {\n        method: 'POST',\n        url: `${host}/get/column/`,\n        data: {\n          session: this.Session,\n          boardId: this.BoardId,\n        },\n      };\n      axios(config).then((res) => {\n        const newState = {\n          columnList: res.data,\n          show: false,\n        };\n        this.setState(newState);\n      });\n    });\n  }\n\n  async updateTask() {\n    const config = {\n      method: 'POST',\n      url: `${host}/get/column/`,\n      data: {\n        session: this.Session,\n        boardId: this.BoardId,\n      },\n    };\n    axios(config).then((res) => {\n      this.setState({ columnList: res.data });\n    });\n    window.location.reload();\n  }\n\n  showModal() {\n    this.setState({ show: true });\n  }\n\n  hideModal() {\n    this.setState({ show: false });\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  returnToAdmin() {\n    const { history, match } = this.props;\n    history.push(`/Dashboard/${match.params.session}`);\n  }\n\n  async removeColumn(id, session, boardId) {\n    const config = {\n      method: 'POST',\n      url: `${host}/delete/column/`,\n      data: {\n        session,\n        boardId,\n        id,\n      },\n    };\n    const deleteState = await axios(config);\n    this.setState({ columnList: deleteState.data });\n    return deleteState.data;\n  }\n\n  searchColumns(columnsFound, tasks) {\n    if (!columnsFound || columnsFound.length === 0) {\n      return (\n        <div className=\"col-not-found\">\n          There are no Columns\n        </div>\n      );\n    }\n    const arr = columnsFound.map((column) => {\n      const { columnList } = this.state;\n      return (\n        <Column\n          key={column._id}\n          name={column.name}\n          id={column._id}\n          session={this.Session}\n          board={this.BoardId}\n          delColumn={this.removeColumn}\n          availableColumns={columnList}\n          updateTask={this.updateTask}\n          tasks={tasks.filter((task) => task.columnId === column.id)}\n        />\n      );\n    });\n    return arr;\n  }\n\n  render() {\n    const { history } = this.props;\n    const { show, columnList } = this.state;\n    if (history.location.state) {\n      return (\n        <div className=\"board\">\n          <Nav className=\"justify-content-end top-bar\" onSelect={() => close(this.Session)}>\n            <Nav.Item className=\"return-button\">\n              <Button onClick={this.returnToAdmin}>{'<'}</Button>\n            </Nav.Item>\n            <NavDropdown title=\"Options\" id=\"nav-dropdown\">\n              <NavDropdown.Item eventKey=\"LogOut\" href=\"/Login\">Log Out</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          <Button variant=\"dark\" className=\"add-button\" onClick={this.showModal}>+</Button>\n          <Modal centered show={show} onHide={this.hideModal}>\n            <Modal.Header closeButton>\n              <Modal.Title>Create Column</Modal.Title>\n            </Modal.Header>\n            <form onSubmit={this.handleSubmit}>\n              <Modal.Body>\n                <label htmlFor=\"column-name\">\n                  <div className=\"input-label\">Column Name:</div>\n                  <input\n                    type=\"text\"\n                    id=\"column-name\"\n                    name=\"columnName\"\n                    value={this.newColumnName}\n                    onChange={this.handleChange}\n                    className=\"textBox\"\n                  />\n                </label>\n              </Modal.Body>\n              <Modal.Footer>\n                <input\n                  type=\"submit\"\n                  value=\"Submit\"\n                  className=\"btn btn-light\"\n                />\n              </Modal.Footer>\n            </form>\n          </Modal>\n          <div className=\"column-deck\">\n            {\n              this.searchColumns(columnList, this.taskList)\n            }\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"error-screen\">There`&apos;`s been a mistake, please check your Session</div>\n    );\n  }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}