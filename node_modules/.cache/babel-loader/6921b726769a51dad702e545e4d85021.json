{"ast":null,"code":"var _jsxFileName = \"/home/master/Desktop/TaskApp/src/components/Task.js\";\nimport React from 'react';\nimport { Button, Modal, Dropdown, ButtonGroup, DropdownButton } from 'react-bootstrap';\nimport axios from 'axios';\nimport host from '../config';\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_id\"] }] */\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      tasks,\n      availableColumns\n    } = this.props;\n    this.state = {\n      show: false,\n      Description: tasks.description,\n      actualColumnId: tasks.columnId,\n      actualColumn: availableColumns.find(item => item._id === tasks.columnId).name\n    };\n    this.tasks = [];\n    this.showModal = this.showModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const {\n      tasks,\n      updateTask\n    } = this.props;\n    const {\n      actualColumnId,\n      Description\n    } = this.state;\n    const config = {\n      method: 'POST',\n      url: `${host}/updateTask/`,\n      data: {\n        id: tasks._id,\n        columnId: actualColumnId,\n        newDescription: Description\n      }\n    };\n    axios(config).then(res => {\n      const newState = {\n        columns: res.data,\n        show: false\n      };\n      this.setState(newState);\n      updateTask(e);\n      this.setState({\n        show: false\n      });\n    });\n  }\n\n  showModal() {\n    this.setState({\n      show: true\n    });\n  }\n\n  hideModal() {\n    this.setState({\n      show: false\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      Description: e.target.value\n    });\n  }\n\n  render() {\n    const {\n      tasks,\n      availableColumns,\n      columnId,\n      board,\n      removeTask\n    } = this.props;\n    const {\n      show,\n      Description,\n      actualColumn\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: tasks._id,\n      className: \"task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      className: \"task-description\",\n      onClick: this.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, tasks.description), /*#__PURE__*/React.createElement(Modal, {\n      centered: true,\n      show: show,\n      onHide: this.hideModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, \"Edit Task\")), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"Description:\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"description\",\n      type: \"text\",\n      name: \"Description\",\n      value: Description,\n      onChange: this.handleChange,\n      className: \"textBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, \"Column:\"), /*#__PURE__*/React.createElement(DropdownButton, {\n      id: \"column\",\n      as: ButtonGroup,\n      variant: \"secondary\",\n      title: actualColumn,\n      className: \"column-dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, availableColumns.map(elem => /*#__PURE__*/React.createElement(Dropdown.Item, {\n      key: elem._id,\n      onClick: () => this.setState({\n        actualColumnId: elem._id,\n        actualColumn: elem.name\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 23\n      }\n    }, elem.name))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"btn btn-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttonContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      className: \"close-btn\",\n      onClick: () => removeTask(tasks._id, columnId, board),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, \"\\u2A2F\")));\n  }\n\n}\n\nexport default Task;","map":{"version":3,"sources":["/home/master/Desktop/TaskApp/src/components/Task.js"],"names":["React","Button","Modal","Dropdown","ButtonGroup","DropdownButton","axios","host","Task","Component","constructor","props","tasks","availableColumns","state","show","Description","description","actualColumnId","columnId","actualColumn","find","item","_id","name","showModal","bind","hideModal","handleChange","handleSubmit","e","preventDefault","updateTask","config","method","url","data","id","newDescription","then","res","newState","columns","setState","target","value","render","board","removeTask","map","elem"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Button,\n  Modal,\n  Dropdown,\n  ButtonGroup,\n  DropdownButton,\n} from 'react-bootstrap';\nimport axios from 'axios';\nimport host from '../config';\n\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_id\"] }] */\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n    const { tasks, availableColumns } = this.props;\n    this.state = {\n      show: false,\n      Description: tasks.description,\n      actualColumnId: tasks.columnId,\n      actualColumn: availableColumns.find((item) => item._id === tasks.columnId).name,\n    };\n    this.tasks = [];\n    this.showModal = this.showModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { tasks, updateTask } = this.props;\n    const { actualColumnId, Description } = this.state;\n    const config = {\n      method: 'POST',\n      url: `${host}/updateTask/`,\n      data: {\n        id: tasks._id,\n        columnId: actualColumnId,\n        newDescription: Description,\n      },\n    };\n    axios(config).then((res) => {\n      const newState = {\n        columns: res.data,\n        show: false,\n      };\n      this.setState(newState);\n      updateTask(e);\n      this.setState({ show: false });\n    });\n  }\n\n  showModal() {\n    this.setState({ show: true });\n  }\n\n  hideModal() {\n    this.setState({ show: false });\n  }\n\n  handleChange(e) {\n    this.setState({ Description: e.target.value });\n  }\n\n  render() {\n    const {\n      tasks,\n      availableColumns,\n      columnId,\n      board,\n      removeTask,\n    } = this.props;\n    const { show, Description, actualColumn } = this.state;\n    return (\n      <div key={tasks._id} className=\"task\">\n        <Button variant=\"dark\" className=\"task-description\" onClick={this.showModal}>{tasks.description}</Button>\n        <Modal centered show={show} onHide={this.hideModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Edit Task</Modal.Title>\n          </Modal.Header>\n          <form onSubmit={this.handleSubmit}>\n            <Modal.Body>\n              <label htmlFor=\"description\">\n                <div className=\"input-label\">Description:</div>\n                <input\n                  id=\"description\"\n                  type=\"text\"\n                  name=\"Description\"\n                  value={Description}\n                  onChange={this.handleChange}\n                  className=\"textBox\"\n                />\n              </label>\n              <label htmlFor=\"column\">\n                <div className=\"input-label\">Column:</div>\n                <DropdownButton\n                  id=\"column\"\n                  as={ButtonGroup}\n                  variant=\"secondary\"\n                  title={actualColumn}\n                  className=\"column-dropdown\"\n                >\n                  {\n                    availableColumns.map((elem) => (\n                      <Dropdown.Item\n                        key={elem._id}\n                        onClick={() => this.setState({\n                          actualColumnId: elem._id,\n                          actualColumn: elem.name,\n                        })}\n                      >\n                        {elem.name}\n                      </Dropdown.Item>\n                    ))\n                  }\n                </DropdownButton>\n              </label>\n            </Modal.Body>\n            <Modal.Footer>\n              <input\n                type=\"submit\"\n                value=\"Submit\"\n                className=\"btn btn-light\"\n              />\n            </Modal.Footer>\n          </form>\n        </Modal>\n        <div className=\"buttonContainer\">\n          <Button\n            variant=\"danger\"\n            className=\"close-btn\"\n            onClick={() => removeTask(tasks._id, columnId, board)}\n          >\n            ⨯\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}